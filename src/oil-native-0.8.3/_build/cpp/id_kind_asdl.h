#ifndef ID_KIND_ASDL_H
#define ID_KIND_ASDL_H

namespace id_kind_asdl {
namespace Id {
  const int Word_Compound = 1;
  const int Arith_Semi = 2;
  const int Arith_Comma = 3;
  const int Arith_Plus = 4;
  const int Arith_Minus = 5;
  const int Arith_Star = 6;
  const int Arith_Slash = 7;
  const int Arith_Percent = 8;
  const int Arith_DPlus = 9;
  const int Arith_DMinus = 10;
  const int Arith_DStar = 11;
  const int Arith_LParen = 12;
  const int Arith_RParen = 13;
  const int Arith_LBracket = 14;
  const int Arith_RBracket = 15;
  const int Arith_RBrace = 16;
  const int Arith_QMark = 17;
  const int Arith_Colon = 18;
  const int Arith_LessEqual = 19;
  const int Arith_Less = 20;
  const int Arith_GreatEqual = 21;
  const int Arith_Great = 22;
  const int Arith_DEqual = 23;
  const int Arith_NEqual = 24;
  const int Arith_DAmp = 25;
  const int Arith_DPipe = 26;
  const int Arith_Bang = 27;
  const int Arith_DGreat = 28;
  const int Arith_DLess = 29;
  const int Arith_Amp = 30;
  const int Arith_Pipe = 31;
  const int Arith_Caret = 32;
  const int Arith_Tilde = 33;
  const int Arith_Equal = 34;
  const int Arith_PlusEqual = 35;
  const int Arith_MinusEqual = 36;
  const int Arith_StarEqual = 37;
  const int Arith_SlashEqual = 38;
  const int Arith_PercentEqual = 39;
  const int Arith_DGreatEqual = 40;
  const int Arith_DLessEqual = 41;
  const int Arith_AmpEqual = 42;
  const int Arith_PipeEqual = 43;
  const int Arith_CaretEqual = 44;
  const int Eof_Real = 45;
  const int Eof_RParen = 46;
  const int Eof_Backtick = 47;
  const int Undefined_Tok = 48;
  const int Unknown_Tok = 49;
  const int Unknown_Backslash = 50;
  const int Eol_Tok = 51;
  const int Ignored_LineCont = 52;
  const int Ignored_Space = 53;
  const int Ignored_Comment = 54;
  const int WS_Space = 55;
  const int Lit_Chars = 56;
  const int Lit_VarLike = 57;
  const int Lit_ArrayLhsOpen = 58;
  const int Lit_ArrayLhsClose = 59;
  const int Lit_Splice = 60;
  const int Lit_Other = 61;
  const int Lit_EscapedChar = 62;
  const int Lit_RegexMeta = 63;
  const int Lit_LBracket = 64;
  const int Lit_RBracket = 65;
  const int Lit_Star = 66;
  const int Lit_QMark = 67;
  const int Lit_LBrace = 68;
  const int Lit_RBrace = 69;
  const int Lit_Comma = 70;
  const int Lit_Equals = 71;
  const int Lit_Underscore = 72;
  const int Lit_Dollar = 73;
  const int Lit_DRightBracket = 74;
  const int Lit_TildeLike = 75;
  const int Lit_Pound = 76;
  const int Lit_Slash = 77;
  const int Lit_Percent = 78;
  const int Lit_Colon = 79;
  const int Lit_Digits = 80;
  const int Lit_At = 81;
  const int Lit_ArithVarLike = 82;
  const int Lit_BadBackslash = 83;
  const int Lit_CompDummy = 84;
  const int Backtick_Right = 85;
  const int Backtick_Quoted = 86;
  const int Backtick_Other = 87;
  const int History_Op = 88;
  const int History_Num = 89;
  const int History_Search = 90;
  const int History_Other = 91;
  const int Op_Newline = 92;
  const int Op_Amp = 93;
  const int Op_Pipe = 94;
  const int Op_PipeAmp = 95;
  const int Op_DAmp = 96;
  const int Op_DPipe = 97;
  const int Op_Semi = 98;
  const int Op_DSemi = 99;
  const int Op_LParen = 100;
  const int Op_RParen = 101;
  const int Op_DLeftParen = 102;
  const int Op_DRightParen = 103;
  const int Op_Less = 104;
  const int Op_Great = 105;
  const int Op_Bang = 106;
  const int Op_LBracket = 107;
  const int Op_RBracket = 108;
  const int Op_LBrace = 109;
  const int Op_RBrace = 110;
  const int Expr_Reserved = 111;
  const int Expr_Symbol = 112;
  const int Expr_Name = 113;
  const int Expr_DecInt = 114;
  const int Expr_BinInt = 115;
  const int Expr_OctInt = 116;
  const int Expr_HexInt = 117;
  const int Expr_Float = 118;
  const int Expr_Dot = 119;
  const int Expr_DColon = 120;
  const int Expr_RArrow = 121;
  const int Expr_RDArrow = 122;
  const int Expr_DSlash = 123;
  const int Expr_At = 124;
  const int Expr_DoubleAt = 125;
  const int Expr_Ellipsis = 126;
  const int Expr_Dollar = 127;
  const int Expr_NotTilde = 128;
  const int Expr_DTilde = 129;
  const int Expr_NotDTilde = 130;
  const int Expr_CastedDummy = 131;
  const int Expr_Null = 132;
  const int Expr_True = 133;
  const int Expr_False = 134;
  const int Expr_And = 135;
  const int Expr_Or = 136;
  const int Expr_Not = 137;
  const int Expr_For = 138;
  const int Expr_Is = 139;
  const int Expr_In = 140;
  const int Expr_If = 141;
  const int Expr_Else = 142;
  const int Expr_Func = 143;
  const int Expr_As = 144;
  const int Expr_Virtual = 145;
  const int Expr_Override = 146;
  const int Expr_Abstract = 147;
  const int Char_OneChar = 148;
  const int Char_Stop = 149;
  const int Char_Hex = 150;
  const int Char_Octal3 = 151;
  const int Char_Octal4 = 152;
  const int Char_Unicode4 = 153;
  const int Char_Unicode8 = 154;
  const int Char_UBraced = 155;
  const int Char_Literals = 156;
  const int Re_Start = 157;
  const int Re_End = 158;
  const int Re_Dot = 159;
  const int Redir_Less = 160;
  const int Redir_Great = 161;
  const int Redir_DLess = 162;
  const int Redir_TLess = 163;
  const int Redir_DGreat = 164;
  const int Redir_GreatAnd = 165;
  const int Redir_LessAnd = 166;
  const int Redir_DLessDash = 167;
  const int Redir_LessGreat = 168;
  const int Redir_Clobber = 169;
  const int Redir_AndGreat = 170;
  const int Redir_AndDGreat = 171;
  const int Redir_GreatPlus = 172;
  const int Redir_DGreatPlus = 173;
  const int Left_DoubleQuote = 174;
  const int Left_SingleQuoteRaw = 175;
  const int Left_SingleQuoteC = 176;
  const int Left_Backtick = 177;
  const int Left_DollarParen = 178;
  const int Left_DollarBrace = 179;
  const int Left_DollarDParen = 180;
  const int Left_DollarBracket = 181;
  const int Left_DollarDoubleQuote = 182;
  const int Left_ProcSubIn = 183;
  const int Left_ProcSubOut = 184;
  const int Left_AtParen = 185;
  const int Left_AmpParen = 186;
  const int Left_PercentParen = 187;
  const int Right_DoubleQuote = 188;
  const int Right_SingleQuote = 189;
  const int Right_Backtick = 190;
  const int Right_DollarBrace = 191;
  const int Right_DollarDParen = 192;
  const int Right_DollarDoubleQuote = 193;
  const int Right_DollarSingleQuote = 194;
  const int Right_Subshell = 195;
  const int Right_ShFunction = 196;
  const int Right_CasePat = 197;
  const int Right_ShArrayLiteral = 198;
  const int Right_ExtGlob = 199;
  const int Right_BlockLiteral = 200;
  const int ExtGlob_Comma = 201;
  const int ExtGlob_At = 202;
  const int ExtGlob_Star = 203;
  const int ExtGlob_Plus = 204;
  const int ExtGlob_QMark = 205;
  const int ExtGlob_Bang = 206;
  const int VSub_DollarName = 207;
  const int VSub_Name = 208;
  const int VSub_Number = 209;
  const int VSub_Bang = 210;
  const int VSub_At = 211;
  const int VSub_Pound = 212;
  const int VSub_Dollar = 213;
  const int VSub_Star = 214;
  const int VSub_Hyphen = 215;
  const int VSub_QMark = 216;
  const int VTest_ColonHyphen = 217;
  const int VTest_Hyphen = 218;
  const int VTest_ColonEquals = 219;
  const int VTest_Equals = 220;
  const int VTest_ColonQMark = 221;
  const int VTest_QMark = 222;
  const int VTest_ColonPlus = 223;
  const int VTest_Plus = 224;
  const int VOp0_Q = 225;
  const int VOp0_E = 226;
  const int VOp0_P = 227;
  const int VOp0_A = 228;
  const int VOp0_a = 229;
  const int VOp1_Percent = 230;
  const int VOp1_DPercent = 231;
  const int VOp1_Pound = 232;
  const int VOp1_DPound = 233;
  const int VOp1_Caret = 234;
  const int VOp1_DCaret = 235;
  const int VOp1_Comma = 236;
  const int VOp1_DComma = 237;
  const int VOp2_Slash = 238;
  const int VOp2_Colon = 239;
  const int VOp2_LBracket = 240;
  const int VOp2_RBracket = 241;
  const int VOp3_At = 242;
  const int VOp3_Star = 243;
  const int Node_PostDPlus = 244;
  const int Node_PostDMinus = 245;
  const int Node_UnaryPlus = 246;
  const int Node_UnaryMinus = 247;
  const int Node_NotIn = 248;
  const int Node_IsNot = 249;
  const int KW_DLeftBracket = 250;
  const int KW_Bang = 251;
  const int KW_For = 252;
  const int KW_While = 253;
  const int KW_Until = 254;
  const int KW_Do = 255;
  const int KW_Done = 256;
  const int KW_In = 257;
  const int KW_Case = 258;
  const int KW_Esac = 259;
  const int KW_If = 260;
  const int KW_Fi = 261;
  const int KW_Then = 262;
  const int KW_Else = 263;
  const int KW_Elif = 264;
  const int KW_Function = 265;
  const int KW_Time = 266;
  const int KW_Const = 267;
  const int KW_Var = 268;
  const int KW_SetVar = 269;
  const int KW_SetRef = 270;
  const int KW_Set = 271;
  const int KW_SetLocal = 272;
  const int KW_SetGlobal = 273;
  const int KW_Proc = 274;
  const int KW_Func = 275;
  const int KW_Data = 276;
  const int KW_Enum = 277;
  const int KW_Class = 278;
  const int KW_Import = 279;
  const int ControlFlow_Break = 280;
  const int ControlFlow_Continue = 281;
  const int ControlFlow_Return = 282;
  const int ControlFlow_Exit = 283;
  const int Glob_LBracket = 284;
  const int Glob_RBracket = 285;
  const int Glob_Star = 286;
  const int Glob_QMark = 287;
  const int Glob_Bang = 288;
  const int Glob_Caret = 289;
  const int Glob_EscapedChar = 290;
  const int Glob_BadBackslash = 291;
  const int Glob_CleanLiterals = 292;
  const int Glob_OtherLiteral = 293;
  const int Format_EscapedPercent = 294;
  const int Format_Percent = 295;
  const int Format_Flag = 296;
  const int Format_Num = 297;
  const int Format_Dot = 298;
  const int Format_Type = 299;
  const int Format_Star = 300;
  const int Format_Time = 301;
  const int Format_Zero = 302;
  const int PS_Subst = 303;
  const int PS_Octal3 = 304;
  const int PS_LBrace = 305;
  const int PS_RBrace = 306;
  const int PS_Literals = 307;
  const int PS_BadBackslash = 308;
  const int Range_Int = 309;
  const int Range_Char = 310;
  const int Range_Dots = 311;
  const int Range_Other = 312;
  const int QSN_LiteralBytes = 313;
  const int QSN_SpecialByte = 314;
  const int QSN_Begin2 = 315;
  const int QSN_Begin3 = 316;
  const int QSN_Begin4 = 317;
  const int QSN_Cont = 318;
  const int BoolUnary_z = 319;
  const int BoolUnary_n = 320;
  const int BoolUnary_o = 321;
  const int BoolUnary_t = 322;
  const int BoolUnary_v = 323;
  const int BoolUnary_R = 324;
  const int BoolUnary_a = 325;
  const int BoolUnary_b = 326;
  const int BoolUnary_c = 327;
  const int BoolUnary_d = 328;
  const int BoolUnary_e = 329;
  const int BoolUnary_f = 330;
  const int BoolUnary_g = 331;
  const int BoolUnary_h = 332;
  const int BoolUnary_k = 333;
  const int BoolUnary_L = 334;
  const int BoolUnary_p = 335;
  const int BoolUnary_r = 336;
  const int BoolUnary_s = 337;
  const int BoolUnary_S = 338;
  const int BoolUnary_u = 339;
  const int BoolUnary_w = 340;
  const int BoolUnary_x = 341;
  const int BoolUnary_O = 342;
  const int BoolUnary_G = 343;
  const int BoolUnary_N = 344;
  const int BoolBinary_GlobEqual = 345;
  const int BoolBinary_GlobDEqual = 346;
  const int BoolBinary_GlobNEqual = 347;
  const int BoolBinary_EqualTilde = 348;
  const int BoolBinary_ef = 349;
  const int BoolBinary_nt = 350;
  const int BoolBinary_ot = 351;
  const int BoolBinary_eq = 352;
  const int BoolBinary_ne = 353;
  const int BoolBinary_gt = 354;
  const int BoolBinary_ge = 355;
  const int BoolBinary_lt = 356;
  const int BoolBinary_le = 357;
  const int BoolBinary_Equal = 358;
  const int BoolBinary_DEqual = 359;
  const int BoolBinary_NEqual = 360;
  const int ARRAY_SIZE = 361;
};

const char* Id_str(int tag);

typedef int Id_t;

enum class Kind {
  Word = 1,
  Arith = 2,
  Eof = 3,
  Undefined = 4,
  Unknown = 5,
  Eol = 6,
  Ignored = 7,
  WS = 8,
  Lit = 9,
  Backtick = 10,
  History = 11,
  Op = 12,
  Expr = 13,
  Char = 14,
  Re = 15,
  Redir = 16,
  Left = 17,
  Right = 18,
  ExtGlob = 19,
  VSub = 20,
  VTest = 21,
  VOp0 = 22,
  VOp1 = 23,
  VOp2 = 24,
  VOp3 = 25,
  Node = 26,
  KW = 27,
  ControlFlow = 28,
  Glob = 29,
  Format = 30,
  PS = 31,
  Range = 32,
  QSN = 33,
  BoolUnary = 34,
  BoolBinary = 35,
};
typedef Kind Kind_t;

const char* Kind_str(Kind tag);


}  // namespace id_kind_asdl

#endif  // ID_KIND_ASDL_H
