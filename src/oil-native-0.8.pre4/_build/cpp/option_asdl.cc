#include <assert.h>
#include "option_asdl.h"

namespace option_asdl {

const char* option_str(int tag) {
  switch (tag) {
  case option_e::errexit:
    return "option.errexit";
  case option_e::nounset:
    return "option.nounset";
  case option_e::hashall:
    return "option.hashall";
  case option_e::pipefail:
    return "option.pipefail";
  case option_e::noexec:
    return "option.noexec";
  case option_e::xtrace:
    return "option.xtrace";
  case option_e::verbose:
    return "option.verbose";
  case option_e::noglob:
    return "option.noglob";
  case option_e::noclobber:
    return "option.noclobber";
  case option_e::posix:
    return "option.posix";
  case option_e::vi:
    return "option.vi";
  case option_e::emacs:
    return "option.emacs";
  case option_e::interactive:
    return "option.interactive";
  case option_e::failglob:
    return "option.failglob";
  case option_e::eval_unsafe_arith:
    return "option.eval_unsafe_arith";
  case option_e::parse_dynamic_arith:
    return "option.parse_dynamic_arith";
  case option_e::nullglob:
    return "option.nullglob";
  case option_e::inherit_errexit:
    return "option.inherit_errexit";
  case option_e::strict_argv:
    return "option.strict_argv";
  case option_e::strict_arith:
    return "option.strict_arith";
  case option_e::strict_array:
    return "option.strict_array";
  case option_e::strict_control_flow:
    return "option.strict_control_flow";
  case option_e::strict_echo:
    return "option.strict_echo";
  case option_e::strict_errexit:
    return "option.strict_errexit";
  case option_e::strict_eval_builtin:
    return "option.strict_eval_builtin";
  case option_e::strict_nameref:
    return "option.strict_nameref";
  case option_e::strict_word_eval:
    return "option.strict_word_eval";
  case option_e::strict_backslash:
    return "option.strict_backslash";
  case option_e::strict_glob:
    return "option.strict_glob";
  case option_e::simple_word_eval:
    return "option.simple_word_eval";
  case option_e::dashglob:
    return "option.dashglob";
  case option_e::more_errexit:
    return "option.more_errexit";
  case option_e::simple_test_builtin:
    return "option.simple_test_builtin";
  case option_e::parse_at:
    return "option.parse_at";
  case option_e::parse_brace:
    return "option.parse_brace";
  case option_e::parse_index_expr:
    return "option.parse_index_expr";
  case option_e::parse_paren:
    return "option.parse_paren";
  case option_e::parse_rawc:
    return "option.parse_rawc";
  case option_e::parse_ignored:
    return "option.parse_ignored";
  case option_e::parse_set:
    return "option.parse_set";
  case option_e::parse_equals:
    return "option.parse_equals";
  case option_e::expand_aliases:
    return "option.expand_aliases";
  case option_e::extglob:
    return "option.extglob";
  case option_e::lastpipe:
    return "option.lastpipe";
  case option_e::progcomp:
    return "option.progcomp";
  case option_e::histappend:
    return "option.histappend";
  case option_e::hostcomplete:
    return "option.hostcomplete";
  case option_e::cmdhist:
    return "option.cmdhist";
  case option_e::assoc_expand_once:
    return "option.assoc_expand_once";
  case option_e::autocd:
    return "option.autocd";
  case option_e::cdable_vars:
    return "option.cdable_vars";
  case option_e::cdspell:
    return "option.cdspell";
  case option_e::checkhash:
    return "option.checkhash";
  case option_e::checkjobs:
    return "option.checkjobs";
  case option_e::checkwinsize:
    return "option.checkwinsize";
  case option_e::complete_fullquote:
    return "option.complete_fullquote";
  case option_e::direxpand:
    return "option.direxpand";
  case option_e::dirspell:
    return "option.dirspell";
  case option_e::dotglob:
    return "option.dotglob";
  case option_e::execfail:
    return "option.execfail";
  case option_e::extdebug:
    return "option.extdebug";
  case option_e::extquote:
    return "option.extquote";
  case option_e::force_fignore:
    return "option.force_fignore";
  case option_e::globasciiranges:
    return "option.globasciiranges";
  case option_e::globstar:
    return "option.globstar";
  case option_e::gnu_errfmt:
    return "option.gnu_errfmt";
  case option_e::histreedit:
    return "option.histreedit";
  case option_e::histverify:
    return "option.histverify";
  case option_e::huponexit:
    return "option.huponexit";
  case option_e::interactive_comments:
    return "option.interactive_comments";
  case option_e::lithist:
    return "option.lithist";
  case option_e::localvar_inherit:
    return "option.localvar_inherit";
  case option_e::localvar_unset:
    return "option.localvar_unset";
  case option_e::login_shell:
    return "option.login_shell";
  case option_e::mailwarn:
    return "option.mailwarn";
  case option_e::no_empty_cmd_completion:
    return "option.no_empty_cmd_completion";
  case option_e::nocaseglob:
    return "option.nocaseglob";
  case option_e::nocasematch:
    return "option.nocasematch";
  case option_e::progcomp_alias:
    return "option.progcomp_alias";
  case option_e::promptvars:
    return "option.promptvars";
  case option_e::restricted_shell:
    return "option.restricted_shell";
  case option_e::shift_verbose:
    return "option.shift_verbose";
  case option_e::sourcepath:
    return "option.sourcepath";
  case option_e::xpg_echo:
    return "option.xpg_echo";
  default:
    assert(0);
  }
}
const char* builtin_str(int tag) {
  switch (tag) {
  case builtin_e::colon:
    return "builtin.colon";
  case builtin_e::dot:
    return "builtin.dot";
  case builtin_e::exec_:
    return "builtin.exec_";
  case builtin_e::eval:
    return "builtin.eval";
  case builtin_e::set:
    return "builtin.set";
  case builtin_e::shift:
    return "builtin.shift";
  case builtin_e::times:
    return "builtin.times";
  case builtin_e::trap:
    return "builtin.trap";
  case builtin_e::unset:
    return "builtin.unset";
  case builtin_e::builtin:
    return "builtin.builtin";
  case builtin_e::readonly:
    return "builtin.readonly";
  case builtin_e::local:
    return "builtin.local";
  case builtin_e::declare:
    return "builtin.declare";
  case builtin_e::typeset:
    return "builtin.typeset";
  case builtin_e::export_:
    return "builtin.export_";
  case builtin_e::test:
    return "builtin.test";
  case builtin_e::bracket:
    return "builtin.bracket";
  case builtin_e::true_:
    return "builtin.true_";
  case builtin_e::false_:
    return "builtin.false_";
  case builtin_e::read:
    return "builtin.read";
  case builtin_e::echo:
    return "builtin.echo";
  case builtin_e::printf:
    return "builtin.printf";
  case builtin_e::cd:
    return "builtin.cd";
  case builtin_e::pushd:
    return "builtin.pushd";
  case builtin_e::popd:
    return "builtin.popd";
  case builtin_e::dirs:
    return "builtin.dirs";
  case builtin_e::pwd:
    return "builtin.pwd";
  case builtin_e::source:
    return "builtin.source";
  case builtin_e::umask:
    return "builtin.umask";
  case builtin_e::wait:
    return "builtin.wait";
  case builtin_e::jobs:
    return "builtin.jobs";
  case builtin_e::fg:
    return "builtin.fg";
  case builtin_e::bg:
    return "builtin.bg";
  case builtin_e::shopt:
    return "builtin.shopt";
  case builtin_e::complete:
    return "builtin.complete";
  case builtin_e::compgen:
    return "builtin.compgen";
  case builtin_e::compopt:
    return "builtin.compopt";
  case builtin_e::compadjust:
    return "builtin.compadjust";
  case builtin_e::getopts:
    return "builtin.getopts";
  case builtin_e::command:
    return "builtin.command";
  case builtin_e::type:
    return "builtin.type";
  case builtin_e::hash:
    return "builtin.hash";
  case builtin_e::help:
    return "builtin.help";
  case builtin_e::history:
    return "builtin.history";
  case builtin_e::alias:
    return "builtin.alias";
  case builtin_e::unalias:
    return "builtin.unalias";
  case builtin_e::bind:
    return "builtin.bind";
  case builtin_e::push:
    return "builtin.push";
  case builtin_e::append:
    return "builtin.append";
  case builtin_e::write:
    return "builtin.write";
  case builtin_e::getline:
    return "builtin.getline";
  case builtin_e::json:
    return "builtin.json";
  case builtin_e::repr:
    return "builtin.repr";
  case builtin_e::use:
    return "builtin.use";
  case builtin_e::opts:
    return "builtin.opts";
  case builtin_e::cat:
    return "builtin.cat";
  default:
    assert(0);
  }
}
}  // namespace option_asdl
