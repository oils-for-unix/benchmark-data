// This code is generated by pgen2/grammar.py

namespace grammar_nt {
  const int augassign = 256;
  const int and_expr = 257;
  const int and_test = 258;
  const int arglist = 259;
  const int argument = 260;
  const int arith_expr = 261;
  const int array_item = 262;
  const int atom = 263;
  const int braced_var_sub = 264;
  const int char_literal = 265;
  const int class_item = 266;
  const int class_items = 267;
  const int class_literal = 268;
  const int class_literal_term = 269;
  const int comma_newline = 270;
  const int command_expr = 271;
  const int comp_for = 272;
  const int comp_op = 273;
  const int comparison = 274;
  const int data_params = 275;
  const int dict = 276;
  const int dict_pair = 277;
  const int dq_string = 278;
  const int end_import = 279;
  const int end_outer = 280;
  const int end_stmt = 281;
  const int expr = 282;
  const int factor = 283;
  const int func_item = 284;
  const int func_items = 285;
  const int import_name = 286;
  const int import_names = 287;
  const int lambdef = 288;
  const int module_item = 289;
  const int name_type = 290;
  const int name_type_list = 291;
  const int named_func = 292;
  const int not_test = 293;
  const int oil_arglist = 294;
  const int oil_expr = 295;
  const int oil_expr_sub = 296;
  const int oil_for = 297;
  const int oil_place_mutation = 298;
  const int oil_var_decl = 299;
  const int old_sh_array_literal = 300;
  const int or_test = 301;
  const int param = 302;
  const int param_group = 303;
  const int pat_eggex = 304;
  const int pat_else = 305;
  const int pat_exprs = 306;
  const int place_list = 307;
  const int power = 308;
  const int range_char = 309;
  const int range_expr = 310;
  const int re_alt = 311;
  const int re_atom = 312;
  const int re_flag = 313;
  const int re_flags = 314;
  const int regex = 315;
  const int repeat_op = 316;
  const int repeat_range = 317;
  const int semi_newline = 318;
  const int sh_array_literal = 319;
  const int sh_command_sub = 320;
  const int shift_expr = 321;
  const int simple_var_sub = 322;
  const int splat_expr = 323;
  const int sq_string = 324;
  const int subscript = 325;
  const int subscriptlist = 326;
  const int suite = 327;
  const int tea_class = 328;
  const int tea_data = 329;
  const int tea_enum = 330;
  const int tea_func = 331;
  const int tea_import = 332;
  const int tea_module = 333;
  const int tea_word = 334;
  const int term = 335;
  const int test = 336;
  const int testlist = 337;
  const int testlist_comp = 338;
  const int trailer = 339;
  const int type_expr = 340;
  const int type_expr_list = 341;
  const int variant = 342;
  const int variant_type = 343;
  const int xor_expr = 344;
  const int ysh_case_pat = 345;
  const int ysh_func = 346;
  const int ysh_proc = 347;

}  // namespace grammar_nt
